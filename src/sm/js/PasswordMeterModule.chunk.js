/*!
 * frontend
 * name: innogy-web,
 * buildDate: Tue Jul 11 2017 11:09:41 GMT+0200 (CEST),
 * packageVersion: 2.0.0
 */
webpackJsonp([13],{22:function(t,i,e){"use strict";function n(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(i,"__esModule",{value:!0});var r=e(1),a=n(r),s=function(){function t(i){(0,a.default)(this,t),this.node=i.node,this.config=i.config,this.identifier=i.identifier}return t.prototype.init=function(){return this},t.prototype.getIdentifier=function(){return this.identifier},t}();i.default=s},631:function(t,i,e){"use strict";function n(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(i,"__esModule",{value:!0});var r=e(1),a=n(r),s=e(3),l=n(s),o=e(2),u=n(o),d=e(22),f=n(d),h=e(633),p=n(h),c=function(t){function i(e){return(0,a.default)(this,i),(0,l.default)(this,t.call(this,e))}return(0,u.default)(i,t),i.prototype.init=function(){t.prototype.init.call(this);var i=new p.default;this.passwordMeter=i.init(this.node)},i}(f.default);i.default=c},633:function(t,i,e){"use strict";function n(t){return t&&t.__esModule?t:{default:t}}function r(){var t=this;M.default.mutateInstant(function(){var i="strength-bar--"+U.join(" strength-bar--");t.$levelBar.removeClass(i).addClass("strength-bar--"+t.getValidationLevel()),t.$strengthLabel.text(t.getValidationLevel()),t.$invalid.filter(".valid").removeClass("valid").filter("[required]").addClass("invalid"),t.$valid.removeClass("invalid").addClass("valid"),t.pw&&t.$wrapperPW.removeClass("error"),t.$scope.removeClass("password-meter--invalid"),!t.isValid&&t.error&&t.$scope.addClass("password-meter--invalid"),t.$wrapperPWConfirm.removeClass("error"),t.pwConfirm&&!t.isConfirmed&&t.isValid&&!t.error&&t.$wrapperPWConfirm.addClass("error")})}function a(t){var i=this;this.error=!1,this.$valid=(0,x.default)([]),this.$invalid=(0,x.default)([]),this.level=U.length-1;for(var e=function(e){(0,b.default)(i.conditions[e]).forEach(function(n){var r=i.conditions[e][n],a=i.regex[n];r.forEach(function(n){var r=(0,x.default)(n);(t||i.pw)&&a&&null!==a.exec(i.pw)?i.$valid=i.$valid.add(r):(i.level=e-1,i.$invalid=i.$invalid.add(r),t&&r.addClass("valid"),(r.is(".valid[required]")||r.is(".invalid[required]"))&&(i.error=!0))})})},n=this.level;n>0;n--)e(n)}function s(){var t=this;M.default.measureInstant(function(){t.pw=t.$inputPW.val(),t.pwConfirm=t.$inputPWConfirm.val(),t.isConfirmed=!!t.pw&&!!t.pwConfirm&&t.pw===t.pwConfirm}),r.call(this)}function l(t){var i=this;M.default.measureInstant(function(){i.pw=i.$inputPW.val(),a.call(i,t)}),r.call(this)}function o(){this.$inputPW.on("input",l.bind(this,!1)),this.$inputPW.on("change",s.bind(this)),this.$inputPWConfirm.on("blur",l.bind(this,!0)),this.$inputPWConfirm.on("change",s.bind(this))}function u(){var t=this;M.default.measureInstant(function(){t.conditions=U.map(function(i){var e={};return t.$scope.find(".password-meter--"+i+" li[data-validate]").each(function(t,i){var n=(0,x.default)(i),r=n.attr("data-validate");e.hasOwnProperty(r)||(e[r]=[]),e[r].push(n)}),e})})}function d(){var t=this;M.default.measureInstant(function(){var i=t.$inputUser?t.$inputUser.val():"";t.regex=(0,g.default)({},I),t.regex.hasUserName=new RegExp("^(?!=($))(?!.*"+i+").+$","i")})}Object.defineProperty(i,"__esModule",{value:!0});var f=e(1),h=n(f),p=e(30),c=n(p),v=e(3),$=n(v),m=e(2),w=n(m),C=e(35),g=n(C),P=e(43),b=n(P),W=e(9),_=n(W),y=e(5),M=n(y),L=e(6),x=n(L),I={hasNumber:/\d/,hasUpperLower:/^(?=.*([a-z]))(?=.*([A-Z])).+$/,hasSpecialChar:/^(?=.*([_!@%#.,:;"'&*()+\-?$\/\\])).+$/,hasMinLength:/^.{8,}$/,hasUserName:""},U=["invalid","medium","strong"],V=function(t){function i(){(0,h.default)(this,i);var e=(0,$.default)(this,t.call(this));return e.$scope=null,e}return(0,w.default)(i,t),i.prototype.init=function(t){this.$scope=t,this.$levelBar=t.find(".strength-bar"),this.$strengthLabel=this.$levelBar.find(".strength-bar__label"),this.$inputUser=t.find('input[name="user"]'),this.$inputPW=t.find('input[name="password"]'),this.$inputPWConfirm=t.find('input[name="password-confirm"]'),this.$wrapperPW=this.$inputPW.closest(".field-group"),this.$wrapperPWConfirm=this.$inputPWConfirm.closest(".field-group"),this.pw=null,this.pwConfirm=null,this.level=0,this.conditions=[],this.$valid=[],this.$invalid=[],this.isConfirmed=!1,u.call(this),d.call(this),o.call(this)},i.prototype.getValidationLevel=function(){return U[this.level]},(0,c.default)(i,[{key:"isValid",get:function(){return this.level>0}}]),i}(_.default);i.default=V}});
//# sourceMappingURL=/js/PasswordMeterModule.chunk.js.map